{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Results.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import {scale} from 'svelte/transition';\n  import {test} from './store.js';\n  import Greeting from \"./Greeting.svelte\";\n  import Question from \"./Question.svelte\";\n  import Results from \"./Results.svelte\";\n\n  let isDark = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n  let activeStep = -1;\n  let results = [];\n\n  let newvalueX;\n  let newvalueY;\n  const movementStrength = 25;\n  const height = movementStrength / window.innerHeight;\n  const width = movementStrength / window.innerWidth;\n\n  const onMouseMove = (event) => {\n    let pageX = event.pageX - (window.innerWidth / 2);\n    let pageY = event.pageY - (window.innerHeight / 2);\n    newvalueX = width * pageX * - 1 - 25;\n    newvalueY = height * pageY * - 1 - 50;\n  };\n\n  const nextStep = (event) => {\n    activeStep += 1;\n    if (event.detail.group) {\n      results = [...results, event.detail.group];\n    }\n  };\n\n  const prevStep = () => {\n    activeStep -= 1;\n    if (results.length) results = [...results.pop()];\n  };\n</script>\n\n<div class=\"wrap {isDark ? 'violet' : 'orange'}\" style=\"background-position: {newvalueX}px {newvalueY}px\" on:mousemove={onMouseMove}>\n  <div class=\"test container\">\n\n      {#if activeStep === -1}\n        <div class=\"ttt\" in:scale=\"{{duration: 350, delay: 350, opacity: 0, start: 0.5}}\"\n             out:scale=\"{{duration: 350, opacity: 0, start: 0.5}}\">\n          <Greeting/>\n          <div class=\"test buttons\">\n            <button class=\"test button\" on:click={nextStep}><span>Далее</span></button>\n          </div>\n        </div>\n      {:else if activeStep < test.length}\n          {#each test as t, i}\n              {#if i === activeStep}\n                <div class=\"ttt\" in:scale=\"{{duration: 350, delay: 350, opacity: 0, start: 0.5}}\"\n                     out:scale=\"{{duration: 350, opacity: 0, start: 0.5}}\">\n                  <Question totalQuestions={test.length} question={t} index={i} on:next={nextStep} on:prev={prevStep}\n                            results={results}/>\n                </div>\n              {/if}\n          {/each}\n      {:else}\n      <div class=\"result\" in:scale=\"{{duration: 350, delay: 350, opacity: 0, start: 0.5}}\"\n           out:scale=\"{{duration: 350, opacity: 0, start: 0.5}}\">\n        <Results results={results} totalQuestions={test.length}/>\n      </div>\n      {/if}\n  </div>\n  <input type=\"checkbox\" class=\"switch input\" id=\"switch\" bind:checked={isDark}><label class=\"switch label\"\n                                                                                       for=\"switch\">Переключить\n  тему</label>\n</div>\n\n<style>\n\n  .test.container {\n    position: relative;\n  }\n\n  .ttt {\n    position: absolute;\n    left: 120px;\n    right: 120px;\n    top: 120px;\n    bottom: 120px;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n  }\n</style>\n",
    "<script>\n  import { onMount } from 'svelte';\n  import {resultText} from './store.js';\n\n  export let results;\n  export let totalQuestions;\n\n  const countedResults = results.reduce((acc, cur) => {\n    if (acc[cur]) acc[cur] += 1;\n    else acc[cur] = 1;\n    return acc;\n  }, {});\n\n  let a = [];\n  let chartData = [];\n\n  for (let key in countedResults) {\n    a.push({\n      group: key,\n      count: countedResults[key],\n    });\n    chartData.push({\n      profession: resultText[key].name,\n      points: countedResults[key],\n    })\n  }\n  a.sort((a, b) => b.count - a.count);\n\n  const gerPercents = (count, total) => {\n    return (count / total * 100).toFixed(1);\n  }\n\n  const mainResult = resultText[a[0].group];\n  const nextResult = resultText[a[1].group];\n\n  onMount(() => {\n    const chart = am4core.create(document.getElementById(\"pie\"), am4charts.PieChart);\n    am4core.useTheme(am4themes_animated);\n    am4core.useTheme(am4themes_material);\n\n    console.log(chart);\n    console.log(chartData);\n\n    chart.data = [...chartData];\n\n    chart.innerRadius = am4core.percent(40);\n    var pieSeries = chart.series.push(new am4charts.PieSeries());\n    pieSeries.dataFields.value = \"points\";\n    pieSeries.dataFields.category = \"profession\";\n    pieSeries.labels.template.maxWidth = 120;\n    pieSeries.labels.template.wrap = true;\n    pieSeries.labels.template.truncard = true;\n  })\n\n</script>\n\n<div class=\"test message\">\n  <h1 class=\"test heading\">Поздравляю, вы прошли тест!</h1>\n  <div class=\"test text\">\n    <p class=\"test paragraph result\">Вам подходит направление в IT:<span\n        class=\"result profession\">{mainResult.name} – {gerPercents(a[0].count, totalQuestions)}%</span></p>\n      {#each mainResult.p as p}\n        <p class=\"test paragraph\">{p}</p>\n      {/each}\n    <p class=\"test paragraph\">Рекомендуем продолжить изучать программирование на курсах:</p>\n    <ul class=\"test list\">\n        {#each mainResult.recommendations as r}\n          <li><a target=\"_blank\" href=\"{r.link}\">{r.text}</a></li>\n        {/each}\n    </ul>\n\n    <ul id=\"legend\">\n      <li>\n        <span class=\"profession\">Fullstack-разработчик</span>\n        <span class=\"points\">{countedResults[1]}</span>\n      </li>\n      <li>\n        <span class=\"profession\">Тестировщик</span>\n        <span class=\"points\">{countedResults[2]}</span>\n      </li>\n      <li>\n        <span class=\"profession\">Фронтенд-разработчик</span>\n        <span class=\"points\">{countedResults[3]}</span>\n      </li>\n      <li>\n        <span class=\"profession\">Мобильный разработчик</span>\n        <span class=\"points\">{countedResults[4]}</span>\n      </li>\n    </ul>\n    <div id=\"pie\"></div>\n\n    <p class=\"test paragraph\">Также вы можете обратить внимание на профессию {nextResult.name}:\n        {#each nextResult.recommendations as r, index}\n          <span class=\"link\"><a target=\"_blank\" href=\"{r.link}\">{r.text}</a>{#if index < nextResult.recommendations.length - 1},&#32;{/if}</span>\n        {/each}\n      .</p>\n  </div>\n</div>\n\n<style>\n  .link {\n    white-space: nowrap;\n  }\n</style>\n\n"
  ],
  "names": [],
  "mappings": "AAwEE,KAAK,UAAU,eAAC,CAAC,AACf,QAAQ,CAAE,QAAQ,AACpB,CAAC,AAED,IAAI,eAAC,CAAC,AACJ,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,KAAK,CACX,KAAK,CAAE,KAAK,CACZ,GAAG,CAAE,KAAK,CACV,MAAM,CAAE,KAAK,CACb,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,cAAc,CAAE,MAAM,AACxB,CAAC;ACeD,KAAK,cAAC,CAAC,AACL,WAAW,CAAE,MAAM,AACrB,CAAC"
}